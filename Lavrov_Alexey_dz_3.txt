Практическое задание к уроку 3 "Введение в проектирование БД"
=============================================================

1. Проанализировать структуру БД vk, которую мы создали на занятии и внести предложения по усовершенствованию
(если такие идеи есть). Напишите пж, все ли понятно по структуре.
=============================================================================================================

По структуре, в принципе, понятно.
Совершенствовать там много конечно чего можно, из того, что на скорую руку пришло в голову:

Добавить таблицы:
- для группировки файлов, чтобы можно было делать альбомы фото и т.п.,
- справочник для типов доступа к файлам, группам (для всех, для друзей, индивидуальный), просмотр/редактирование
- справочник для стран и нас. пунктов (иначе все будут заносить названия кто как захочет и будет бардак), языков общения
- справочник для статусов профиля пользователя (ограниченный (напр. 12+, 16+), полный, замороженный, "стелс" и т.п.)
- справочник интересов/областей

Таблица users.
Стоит добавить еще необязательное поле c отчеством.
Также наверное можно было бы добавить необязательное поле со ссылками на другие соц. сети или 
другие персональные ресурсы в Сети.

Таблица profiles.
Можно добавить статус профиля с соответсвующим справочником (см. выше)
Также можно добавить поле "о себе", интересы (тоже можно сделать справочником, чтобы можно было фильтровать), доступные языки общения (задел на международный формат).

Таблица messages.
В поле txt, как я понимаю, можно же писать не только plain-text, но и html-формат со смайликами, графикой и т.п.
Хорошо было бы добавить возможность отправки сообщений не 1 получателю, а группе или сообществу.

Таблица friend_requests.
Как и обсуждали на вебинаре - нужно докрутить "ассиметричность дружбы" и, пожалуй, добавить дату начала дружбы.

Таблица communities.
Есть смысл добавить поле со ссылкой на справочник типов интересов/областей, к которым относится сообщество.
Пожалуй, помимо роли создателя/администратора, есть смысл добавить 1-2 доп. учетки "замов", имеющих возможность
"рулить" сообществом.

Про "лайки" - тоже конечно нужно бы докинуть, но про них уже есть п.2 ДЗ.


2. Добавить необходимую таблицу/таблицы для того, чтобы можно было использовать лайки для медиафайлов,
постов и пользователей.
======================================================================================================

Добавил в конец файла create_and_fill_bd_vk.sql
Здесь просто приведу выдержку по структуре (без наполнения):

================================ НАЧАЛО ЦИТИРОВАНИЯ ================================
-- справочник типов лайков ("на вырост")
DROP TABLE IF EXISTS likes_types;
CREATE TABLE IF NOT EXISTS likes_types(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	-- оценка/хар-ка лайка - нейтаральная 0, отрицательная, положительная (и насколько по шкале)
    rate TINYINT(2) NOT NULL,
    name VARCHAR (50) NOT NULL
);

INSERT INTO likes_types VALUES
	(NULL, -10, 'Bull scheet'),
	(NULL, 0, 'So-so'),
	(NULL, 10, 'Incredable');

	
-- справочник целей лайков ("на вырост")
DROP TABLE IF EXISTS likes_target;
CREATE TABLE IF NOT EXISTS likes_target(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    target VARCHAR(150)
);

INSERT INTO likes_target VALUES
    (NULL, 'media'),
    (NULL, 'messages'),
    (NULL, 'users');

    
-- таблица лайков
DROP TABLE IF EXISTS likes;
CREATE TABLE IF NOT EXISTS likes(
    id SERIAL PRIMARY KEY,
    likes_target_id INT UNSIGNED NOT NULL,
    likes_types_id INT UNSIGNED NOT NULL,
    from_user_id BIGINT UNSIGNED NOT NULL,
    created_at DATETIME NOT NULL DEFAULT NOW(),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    KEY (likes_target_id),
    KEY (from_user_id),
    FOREIGN KEY (likes_target_id) REFERENCES likes_target(id),
    FOREIGN KEY (from_user_id) REFERENCES users(id),
    FOREIGN KEY (likes_types_id) REFERENCES likes_types(id)
);
================================ КОНЕЦ ЦИТИРОВАНИЯ ================================


3. Используя сервис http://filldb.info или другой по вашему желанию, сгенерировать тестовые данные для всех таблиц,
учитывая логику связей. Для всеъ таблиц, где это имеет смысл, создать не менее 100 строк.
Создать локально БД vk и загрузить в нее тестовые данные.
===================================================================================================================

Данные сгенерировал с помощью http://www.generatedata.com/ (http://filldb.info - постоянно падает, не понравился).
Сделал создание БД, структуры таблиц и наполнение в одном файле: create_and_fill_bd_vk.sql

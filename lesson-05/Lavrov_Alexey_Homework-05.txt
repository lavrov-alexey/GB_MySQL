5.1. Практическое задание по теме "Операторы, фильтрация, сортировка и ограничение"
===================================================================================

5.1.1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. 
Заполните их текущими датой и временем.
-------------------------------------------------------------------------------

Сложностей не вызвало.

Скрипт:				Lavrov_Alexey_dz_5_1_1.sql
Результат работы:	Lavrov_Alexey_dz_5_1_1.txt


5.1.2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были 
заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10".
Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.
-----------------------------------------------------------------------------------------

Изначально в БД shop поля были все-таки DATETIME, поэтому для начала пришлось перегнать их
в VARCHAR, перегенерить created_at и updated_at (в целях тренировки и т.к. в п.5.1.1. мы в 
них загнали текущие дату и время), а уж потом изменить формат на DATETIME. 
Значительных сложностей не вызвало, но было интересно, хоть и не быстро...

Скрипт:				Lavrov_Alexey_dz_5_1_2.sql
Результат работы:	Lavrov_Alexey_dz_5_1_2.txt


5.1.3. В таблице складских запасов storehouses_products в поле value могут встречаться 
самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы.
Необходимо отсортировать записи таким образом, чтобы они выводились в порядке
увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех
записей.
-----------------------------------------------------------------------------------------

В прикрепленном к уроку файле shop.sql в таблицы storehouses_products и storehouses - данные
не загружались, пришлось догенерировать данные и добавить в shop.sql.
Двумя запросами отдельно - сделать получилось без проблем. В один запрос - никак не ложилось.
Попробовал через добавление (INSERT-SELECT) в новую таблицу-дубль забросить сначала отсортированные
по value данные без нулевых значений, а потом - отдельно с нулевыми значениями, но в таблице - 
упорядоченность по value не сохранилась (не понял почему).
После некоторых поисков в Интернет наткнулся на одном из форумов на вариант 2го условия сортировки:
ORDER BY value = 0, value
Но так и не понял - как именно оно работает...

Скрипт:				Lavrov_Alexey_dz_5_1_3.sql
Результат работы:	Lavrov_Alexey_dz_5_1_3.txt


5.1.4. (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе 
и мае. Месяцы заданы в виде списка английских названий ('may', 'august')
-----------------------------------------------------------------------------------------

Немного пришлось повозиться по поводу форматов и порядка выполнения в запросе, но в итоге -
все получилось.

Скрипт:				Lavrov_Alexey_dz_5_1_4.sql
Результат работы:	Lavrov_Alexey_dz_5_1_4.txt


5.1.5. (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. 
SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, 
заданном в списке IN.
-----------------------------------------------------------------------------------------

Сделал по аналогии с п.5.1.3., но почему порядок отбора именно так работает - пока не понял.

Скрипт:				Lavrov_Alexey_dz_5_1_5.sql
Результат работы:	Lavrov_Alexey_dz_5_1_5.txt


5.2. Практическое задание теме "Агрегация данных"
=================================================

5.2.1. Подсчитайте средний возраст пользователей в таблице users
----------------------------------------------------------------

Возраст (как разницу между датой рождения и текущей датой) мы делали в ДЗ-4.3, а посчитать
среднее значение по столбцу (и округлить для красоты до сотых) - сложностей не представляет.

Скрипт:				Lavrov_Alexey_dz_5_2_1.sql
Результат работы:	Lavrov_Alexey_dz_5_2_1.txt


5.2.2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
Следует учесть, что необходимы дни недели текущего года, а не года рождения.
-----------------------------------------------------------------------------------------

Больших сложностей не вызвало - мелкими шажками "родил монстра", который считает
то что нужно... ))

Скрипт:				Lavrov_Alexey_dz_5_2_2.sql
Результат работы:	Lavrov_Alexey_dz_5_2_2.txt


5.2.3. (по желанию) Подсчитайте произведение чисел в столбце таблицы value
--------------------------------------------------------------------------

Речь видимо о столбце value таблицы storehouses_products БД shop.
Среди агрегатных функций произведения не нашлось, поэтому поиски решения
привели к варианту использования свойства логарифмов: 
логарифм произведения равен сумме логарифмов, если применить обратную 
к натуральному логарифму (Ln) функцию экспоненты (exp), то получим искомое
произведение.
exp(ln(2*3*4*5)) = 2*3*4*5 = exp(ln(2) + ln(3) + ln(4) + ln(5))

Нулевые значения в таблице (нет на складе) - не учитываем, 
иначе - произведение ноль.

Скрипт:				Lavrov_Alexey_dz_5_2_3.sql
Результат работы:	Lavrov_Alexey_dz_5_2_3.txt